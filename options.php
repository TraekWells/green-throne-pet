<?php

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class Options {
	private $options_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'options_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'options_page_init' ) );
	}

	public function options_add_plugin_page() {
		add_menu_page(
			'Options', // page_title
			'Options', // menu_title
			'manage_options', // capability
			'options', // menu_slug
			array( $this, 'options_create_admin_page' ), // function
			'dashicons-admin-generic', // icon_url
			75 // position
		);
	}

	public function options_create_admin_page() {
		$this->options_options = get_option( 'options_option_name' ); ?>

		<div class="wrap">
			<h2>Options</h2>
			<p>These are some additional settings you can adjust.</p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'options_option_group' );
					do_settings_sections( 'options-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function options_page_init() {
		register_setting(
			'options_option_group', // option_group
			'options_option_name', // option_name
			array( $this, 'options_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'options_setting_section', // id
			'Settings', // title
			array( $this, 'options_section_info' ), // callback
			'options-admin' // page
		);

		add_settings_field(
			'zip_codes', // id
			'Zip Codes' . '<br>' . '<em>' . 'comma seperated list' . '</em>', // title
			array( $this, 'zip_codes_callback' ), // callback
			'options-admin', // page
			'options_setting_section' // section
		);

		add_settings_field(
			'phone_number', // id
			'Phone Number' . '<br>' . '<em>' . 'ex: 123-456-7890' . '</em>', // title
			array( $this, 'phone_number_callback' ), // callback
			'options-admin', // page
			'options_setting_section' // section
		);

		add_settings_field(
			'email_address', // id
			'Email Address', // title
			array( $this, 'email_address_callback' ), // callback
			'options-admin', // page
			'options_setting_section' // section
		);

		add_settings_field(
			'instagram', // id
			'Instagram', // title
			array( $this, 'instagram_callback' ), // callback
			'options-admin', // page
			'options_setting_section' // section
		);

		add_settings_field(
			'facebook', // id
			'Facebook', // title
			array( $this, 'facebook_callback' ), // callback
			'options-admin', // page
			'options_setting_section' // section
		);

		add_settings_field(
			'address', // id
			'Address', // title
			array( $this, 'address_callback' ), // callback
			'options-admin', // page
			'options_setting_section' // section
		);
	}

	public function options_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['zip_codes'] ) ) {
			$sanitary_values['zip_codes'] = esc_textarea( $input['zip_codes'] );
		}

		if ( isset( $input['phone_number'] ) ) {
			$sanitary_values['phone_number'] = sanitize_text_field( $input['phone_number'] );
		}

		if ( isset( $input['email_address'] ) ) {
			$sanitary_values['email_address'] = sanitize_text_field( $input['email_address'] );
		}

		if ( isset( $input['instagram'] ) ) {
			$sanitary_values['instagram'] = sanitize_text_field( $input['instagram'] );
		}

		if ( isset( $input['facebook'] ) ) {
			$sanitary_values['facebook'] = sanitize_text_field( $input['facebook'] );
		}

		if ( isset( $input['address'] ) ) {
			$sanitary_values['address'] = sanitize_text_field( $input['address'] );
		}

		return $sanitary_values;
	}

	public function options_section_info() {
		
	}

	public function zip_codes_callback() {
		printf(
			'<textarea class="large-text" rows="5" name="options_option_name[zip_codes]" id="zip_codes">%s</textarea>',
			isset( $this->options_options['zip_codes'] ) ? esc_attr( $this->options_options['zip_codes']) : ''
		);
	}

	public function phone_number_callback() {
		printf(
			'<input class="regular-text" type="text" name="options_option_name[phone_number]" id="phone_number" value="%s">',
			isset( $this->options_options['phone_number'] ) ? esc_attr( $this->options_options['phone_number']) : ''
		);
	}

	public function email_address_callback() {
		printf(
			'<input class="regular-text" type="text" name="options_option_name[email_address]" id="email_address" value="%s">',
			isset( $this->options_options['email_address'] ) ? esc_attr( $this->options_options['email_address']) : ''
		);
	}

	public function instagram_callback() {
		printf(
			'<input class="regular-text" type="text" name="options_option_name[instagram]" id="instagram" value="%s">',
			isset( $this->options_options['instagram'] ) ? esc_attr( $this->options_options['instagram']) : ''
		);
	}

	public function facebook_callback() {
		printf(
			'<input class="regular-text" type="text" name="options_option_name[facebook]" id="facebook" value="%s">',
			isset( $this->options_options['facebook'] ) ? esc_attr( $this->options_options['facebook']) : ''
		);
	}

	public function address_callback() {
		printf(
			'<input class="regular-text" type="text" name="options_option_name[address]" id="address" value="%s">',
			isset( $this->options_options['address'] ) ? esc_attr( $this->options_options['address']) : ''
		);
	}

}
if ( is_admin() )
	$options = new Options();

/* 
 * Retrieve this value with:
 * $options_options = get_option( 'options_option_name' ); // Array of All Options
 * $zip_codes = $options_options['zip_codes']; // Zip Codes
 * $phone_number = $options_options['phone_number']; // Phone Number
 * $email_address = $options_options['email_address']; // Email Address
 * $instagram = $options_options['instagram']; // Instagram
 * $facebook = $options_options['facebook']; // Facebook
 * $address = $options_options['address']; // Address
 */
