/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%;font-size:62.5%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;display:block;width:100%}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}:root{--font-header:"Nunito",sans-serif;--font-body:"Lato",sans-serif;--color-gray-700:#333;--color-gray-500:#999;--color-gray-300:#f7f7f7;--color-primary-500:#00611f;--color-primary-400:#10a23e;--color-primary-300:#5ad882;--color-primary-100:#e9f6ec;--color-secondary-700:#ad611a;--color-secondary-100:#fdf7f2;--color-white:#fff}.about__social-icon:hover,.card,.footer__social-icon:hover,.navigation,.overlapping-cards__content{box-shadow:0 .5rem 1.5rem rgba(0,0,0,.08),0 0 3rem rgba(0,0,0,.06)}.about__social-icon,.button__primary,.footer__social-icon,.form-group--inline label,.navigation__link{transition:all .15s ease-in}.button,.card,.form-group--inline input,.form input,.form textarea,.get-a-quote__image,.navigation__link,.overlapping-cards__content,.overlapping-cards__image{border-radius:1rem}.card,.overlapping-cards__content{background-color:var(--color-white);position:relative;padding:4.5rem 3rem 3rem}@media only screen and (max-width:56.25em){html{font-size:59%}}@media only screen and (max-width:43.75em){html{font-size:57%}}body{font-family:var(--font-body)}h1,h2,h3,h4,h5,h6{font-family:var(--font-header)}ul{list-style:none}li:not(.navigation__item){margin-bottom:1.5rem}h1{font-size:5.8rem;color:inherit}@media only screen and (max-width:43.75em){h1{font-size:5rem}}h2{font-size:3.5rem;color:var(--color-primary-500);text-align:center}@media only screen and (max-width:43.75em){h2{font-size:3.1rem}}h3{font-size:3rem;color:var(--color-primary-500)}@media only screen and (max-width:43.75em){h3{font-size:2.7rem}}h4{font-size:2.6rem}h5{font-size:2.2rem}a,button,input,label,li,p,textarea{font-size:1.7rem;color:var(--color-gray-700);line-height:1.6}p{margin-bottom:2rem}a{text-decoration:none}.subtitle{color:inherit;font-size:2rem;max-width:65rem}@media only screen and (max-width:43.75em){.subtitle{font-size:1.8rem}}.lead-text{font-size:1.9rem;text-align:center;max-width:65rem;margin:0 auto}.checked-list{margin-bottom:3rem}.checked-list li{display:flex;align-items:center}.checked-list svg{width:2rem;margin-right:1rem}@media only screen and (max-width:43.75em){.checked-list svg{flex:none}}.checked-list svg>g{stroke:var(--color-primary-500);stroke-width:1.3}.highlight{color:var(--color-primary-400)}h1,h2,h3,h4,h5,h6,ul{margin:0;padding:0}h2{margin-bottom:2rem}.mb-4{margin-bottom:4rem}.button{display:inline-flex;align-items:center;justify-content:center;padding:1.5rem 2.5rem;color:var(--color-primary-500);border:none;cursor:pointer;text-align:center}.button__primary{background-color:var(--color-primary-100)}.button__primary:focus,.button__primary:hover{transform:translateY(-2px);background-color:#c8ead0}.form{position:relative;display:flex;flex-direction:column}@media only screen and (max-width:31.25em){.form{width:90%}}.form label{font-size:1.4rem;margin-bottom:1rem}.form textarea{resize:none}.form input,.form textarea{background-color:var(--color-gray-300);border:none;padding:1rem 2rem;flex-grow:1;margin-right:1.5rem}@media only screen and (max-width:31.25em){.form input,.form textarea{margin-bottom:1.5rem}}.form input:focus,.form textarea:focus{outline:2px solid var(--color-primary-400)}.form-group{margin-bottom:3rem;display:flex;flex-direction:column}.form-group--inline{justify-content:space-between;flex-direction:row}@media only screen and (max-width:31.25em){.form-group--inline{flex-direction:column}}@media only screen and (max-width:31.25em){.form-group--inline>*{flex:1}}.form-group--inline label{-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;position:absolute;opacity:0;font-size:1.4rem;left:2rem}.form-group--inline input{background-color:var(--color-gray-300);border:none;padding:1rem 2rem;flex-grow:1;margin-right:1.5rem}@media only screen and (max-width:31.25em){.form-group--inline input{margin-right:0}}.form-group--inline input:focus+label{opacity:1;transform:translateY(-2.5rem)}.cards{display:flex}@media only screen and (max-width:43.75em){.cards{flex-direction:column;align-items:center}}@media only screen and (max-width:43.75em){.card{max-width:45rem}}.card:not(:last-child){margin-right:4rem}@media only screen and (max-width:43.75em){.card:not(:last-child){margin-right:0}}@media only screen and (max-width:43.75em){.card:first-child{margin-bottom:6rem}}.card h3{font-weight:400}.card .icon-wrapper{display:flex;align-items:center;justify-content:center;background-color:var(--color-primary-100);border-radius:50%;position:absolute;top:-3.5rem;left:3rem;padding:1.5rem}.card .icon{width:3.5rem}.card .icon-stroke{stroke:var(--color-primary-500);stroke-width:1.3}.pill{display:block;width:-webkit-max-content;width:-moz-max-content;width:max-content;margin:0 auto;background-color:var(--color-secondary-100);color:var(--color-secondary-700);font-size:1.4rem;border-radius:2rem;text-transform:uppercase;padding:1rem 2rem}.steps{display:flex;justify-content:center}@media only screen and (max-width:43.75em){.steps{flex-wrap:wrap}}.steps .step{display:flex;flex-direction:column;align-self:flex-start;align-items:center;max-width:12rem;text-align:center;position:relative}.steps .step:not(:last-child){margin-right:10rem}@media only screen and (max-width:53.125em){.steps .step:not(:last-child){margin-right:6rem}}.steps .step:first-child:after{content:"";display:flex;justify-content:center;align-items:center;position:absolute;height:4rem;width:100%;left:100%;background-image:url(../images/dotted-line.svg);background-repeat:no-repeat;margin-top:4rem;margin-left:.5rem}@media only screen and (max-width:43.75em){.steps .step:first-child:after{display:none}}.steps .step:nth-child(2){margin-top:8rem}.steps .step:nth-child(2):after{content:"";display:flex;justify-content:center;align-items:center;position:absolute;height:4rem;width:100%;left:100%;background-image:url(../images/dotted-line.svg);background-repeat:no-repeat;transform:rotate(180deg);margin-left:-2rem;margin-top:6.5rem}@media only screen and (max-width:43.75em){.steps .step:nth-child(2):after{display:none;margin-top:2rem;margin-left:0}}@media only screen and (max-width:43.75em){.steps .step:nth-child(2){margin-top:0}}.steps .step:nth-child(3){margin-top:16rem}.steps .step:nth-child(3):after{content:"";display:flex;justify-content:center;align-items:center;position:absolute;height:4rem;width:100%;left:100%;background-image:url(../images/dotted-line.svg);background-repeat:no-repeat;margin-top:4rem;margin-left:.5rem}@media only screen and (max-width:43.75em){.steps .step:nth-child(3):after{display:none}}@media only screen and (max-width:43.75em){.steps .step:nth-child(3){margin-top:0}}.steps .step:nth-child(4){margin-top:24rem}@media only screen and (max-width:43.75em){.steps .step:nth-child(4){margin-top:0}}.steps .step__icon-wrapper{display:flex;align-items:center;justify-content:center;background-color:var(--color-primary-100);border-radius:50%;height:4.5rem;width:4.5rem;padding:3rem}.steps .step__icon-wrapper img{width:4rem}.overlapping-cards{display:flex;align-items:center;justify-content:center}.overlapping-cards__content{flex-basis:50%;z-index:10}@media only screen and (max-width:43.75em){.overlapping-cards__content{flex-basis:70%}}.overlapping-cards__image{overflow:hidden;flex-basis:30%;margin-left:-6rem;position:relative;z-index:0}@media only screen and (max-width:43.75em){.overlapping-cards__image{display:none}}.get-a-quote{display:flex;align-items:center;justify-content:center}.get-a-quote__content{flex-basis:50%}@media only screen and (max-width:43.75em){.get-a-quote__content{flex-basis:90%;display:flex;flex-direction:column;align-items:center;justify-content:center;text-align:center}}.get-a-quote__image{flex-basis:30%;margin-right:4rem}@media only screen and (max-width:43.75em){.get-a-quote__image{display:none}}.contact-line{display:flex;margin-bottom:2rem}.contact-line__icon{width:3rem;margin-right:2rem}.about{display:flex;flex-direction:column;justify-content:center;align-items:center}.about__image{max-width:30rem;border-radius:50%;margin-bottom:3rem}.about__socials{display:flex}.about__social-icon{display:flex;align-items:center;justify-content:center;background-color:var(--color-white);border-radius:50%;padding:1rem;overflow:hidden}.about__social-icon:not(:last-child){margin-right:1rem}.about__social-icon:hover{transform:translateY(-2px)}.about__social-icon svg{width:3rem;height:3rem}body{position:relative;overflow-x:hidden}body:before{content:"";position:absolute;top:0;left:0;right:0;height:100%;width:100%;background-image:url(../images/background-bubbles.svg);background-repeat:no-repeat;background-size:cover;z-index:-999999}.container{width:95%;max-width:100rem;margin:0 auto}.container--wide{max-width:120rem}.container--narrow{max-width:90rem}.cols{display:flex}@media only screen and (max-width:43.75em){.cols{flex-direction:column}}.cols>*{width:100%}.col:not(:last-child){margin-right:5rem}section{padding:6rem 0 3rem}.navigation{background-color:var(--color-white)}.navigation .container--wide{display:flex;justify-content:space-between;align-items:center}.navigation__list{display:flex;margin:1.5rem 0}@media only screen and (max-width:31.25em){.navigation__list{display:none}}.navigation__item{display:block}.navigation__item:not(:last-child){margin-right:1rem}.navigation__link{display:block;padding:1.5rem 2rem;background-color:var(--color-white)}.navigation__link:hover{background-color:var(--color-primary-100)}.logo{width:11rem}.footer{display:flex;align-items:center;justify-content:center;flex-direction:column;background-color:var(--color-primary-100);border-bottom:.5rem solid var(--color-primary-500);padding:7rem 0;margin-top:10rem}.footer__pages{display:flex;justify-content:space-around;margin-bottom:3rem}@media only screen and (max-width:31.25em){.footer__pages{flex-wrap:wrap;justify-content:unset;width:90%}}.footer__link:not(:last-child){margin-right:5rem}.footer__socials{display:flex;margin-bottom:3rem}.footer__social-icon{display:flex;align-items:center;justify-content:center;background-color:var(--color-white);border-radius:50%;padding:1rem;overflow:hidden}.footer__social-icon:not(:last-child){margin-right:3rem}.footer__social-icon:hover{transform:translateY(-2px)}.footer__social-icon svg{width:3rem;height:3rem}.hero{display:flex;align-items:center;justify-content:center;background-color:var(--color-primary-100);text-align:center;min-height:25rem;color:var(--color-gray-700)}.hero--home{color:var(--color-white);background-image:linear-gradient(rgba(0,0,0,.65),rgba(0,0,0,.65)),url(../images/homepage-hero.jpg);background-size:cover;background-position:50%;min-height:40rem}@media only screen and (max-width:31.25em){.hero--home{height:65vh}}.hero .container{display:flex;flex-direction:column;align-items:center;justify-content:center}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
